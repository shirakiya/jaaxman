pip:
  restore_cache: &pip_restore_cache
    keys:
      - pip-v2-{{ .Branch }}-{{ checksum "backend/requirements-dev.txt" }}-{{ checksum "backend/requirements.txt" }}
      - pip-v2-{{ .Branch }}-
      - pip-v2-

  install:  &pip_install
    name: Install pip packages
    command: |
      python3 -m venv ~/venv
      . ~/venv/bin/activate
      pip install -r backend/requirements-dev.txt

  save_cache: &pip_save_cache
    key: pip-v2-{{ .Branch }}-{{ checksum "backend/requirements-dev.txt" }}-{{ checksum "backend/requirements.txt" }}
    paths:
      - ~/venv
npm:
  restore_cache: &node_restore_cache
    keys:
      - npm-v1-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}
      - npm-v1-{{ .Branch }}-
      - npm-v1-

  install:  &node_install
    name: Install npm modules
    command: |
      cd frontend/
      npm install

  save_cache: &node_save_cache
    key: npm-v1-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}
    paths:
      - ./frontend/node_modules


version: 2.1
executors:
  python:
    docker:
      - image: circleci/python:3.7.6
        environment:
          RUN_MODE: test
          MYSQL_USER: root
          MYSQL_PASSWORD: ""
          MYSQL_HOST: 127.0.0.1
          GOOGLE_API_KEY: ""
      - image: mysql:5.6
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
  node:
    docker:
      - image: circleci/node:12.14.1

jobs:
  python-test:
    executor: python
    steps:
      - checkout
      - restore_cache:
          <<: *pip_restore_cache
      - run:
          <<: *pip_install
      - save_cache:
          <<: *pip_save_cache
      - run:
          name: Run tests
          command: |
            . ~/venv/bin/activate
            sleep 5s
            cd backend/
            coverage run manage.py test
      - run:
          name: Report coverage
          command: |
            . ~/venv/bin/activate
            cd backend/
            coverage report

  flake8:
    executor: python
    steps:
      - checkout
      - restore_cache:
          <<: *pip_restore_cache
      - run:
          <<: *pip_install
      - save_cache:
          <<: *pip_save_cache
      - run:
          name: Run flake8
          command: |
            . ~/venv/bin/activate
            cd backend/
            flake8 .

  isort:
    executor: python
    steps:
      - checkout
      - restore_cache:
          <<: *pip_restore_cache
      - run:
          <<: *pip_install
      - save_cache:
          <<: *pip_save_cache
      - run:
          name: Run isort check
          command: |
            . ~/venv/bin/activate
            cd backend/
            isort --recursive --check-only .

  eslint:
    executor: node
    steps:
      - checkout
      - restore_cache:
          <<: *node_restore_cache
      - run:
          <<: *node_install
      - save_cache:
          <<: *node_save_cache
      - run:
          name: Run eslint check
          command: |
            cd frontend/
            npm run lint

workflows:
  version: 2
  test:
    jobs:
      - python-test
      - flake8
      - isort
      - eslint

working_directory: &working_directory ~/jaaxman
pip:
  restore_cache: &pip_restore_cache
    keys:
      - pip-v1-{{ .Branch }}-{{ checksum "requirements-dev.txt" }}-{{ checksum "requirements.txt" }}
      - pip-v1-{{ .Branch }}-
      - pip-v1-

  install:  &pip_install
    name: Install pip packages
    command: |
      python3 -m venv ~/venv
      . ~/venv/bin/activate
      pip install -r requirements-dev.txt

  save_cache: &pip_save_cache
    key: pip-v1-{{ .Branch }}-{{ checksum "requirements-dev.txt" }}-{{ checksum "requirements.txt" }}
    paths:
      - ~/venv

npm:
  restore_cache: &npm_restore_cache
    keys:
      - npm-v1-{{ .Branch }}-{{ checksum "package.json" }}
      - npm-v1-{{ .Branch }}-
      - npm-v1-

  install: &npm_install
    name: Install npm modules
    command: npm install

  save_cache: &npm_save_cache
    key: npm-v1-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - ./node_modules


version: 2
jobs:
  python-test:
    working_directory: *working_directory
    docker:
      - image: circleci/python:3.6.2
        environment:
          RUN_MODE: test
          MYSQL_USER: root
          MYSQL_PASSWORD: ""
          MYSQL_HOST: 127.0.0.1
          GOOGLE_API_KEY: ""
      - image: mysql:5.6
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      - checkout
      - restore_cache:
          <<: *pip_restore_cache
      - run:
          <<: *pip_install
      - save_cache:
          <<: *pip_save_cache
      - run:
          name: Run tests
          command: |
            . ~/venv/bin/activate
            sleep 5s
            coverage run manage.py test
      - run:
          name: Report coverage
          command: |
            . ~/venv/bin/activate
            coverage report

  build-assets:
    working_directory: *working_directory
    docker:
      - image: circleci/node:8.4.0
    steps:
      - checkout
      - restore_cache:
          <<: *npm_restore_cache
      - run:
          <<: *npm_install
      - save_cache:
          <<: *npm_save_cache
      - run:
          name: Build
          command: npm run build:production
      - save_cache:
          key: build-assets-{{ .Branch }}-{{ .Revision }}
          paths:
            - ./app/static/dist

  deploy:
    working_directory: *working_directory
    docker:
      - image: circleci/python:3.6.2
    steps:
      - checkout
      - restore_cache:
          <<: *pip_restore_cache
      - run:
          <<: *pip_install
      - run:
          name: Install extra pip packages for build
          command: |
            . ~/venv/bin/activate
            pip install wheel
            pip install awscli
      - run:
          name: Create pip wheels
          command: |
            . ~/venv/bin/activate
            pip wheel -w wheelhouse -r requirements.txt
      - restore_cache:
          key: build-assets-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Send app tarball to S3
          command: |
            IDENTIFIER=`date '+%Y%m%d%H%M%S'`
            TAR_NAME=jaaxman-${IDENTIFIER}.tar.gz
            tar cvzf $TAR_NAME --exclude=app/static/dist/*.js *
            . ~/venv/bin/activate
            aws s3 cp $TAR_NAME s3://jaaxman-production-infla/app/
            aws s3 sync ./app/static/dist/ s3://jaaxman-production-public/js/bundle/ --exclude=manifest.json
            python scripts/notify_build.py $TAR_NAME

workflows:
  version: 2
  test_and_build:
    jobs:
      - python-test
      - build-assets:
          requires:
            - python-test
          filters:
            branches:
              only:
                - production
      - deploy:
          requires:
            - python-test
            - build-assets
          filters:
            branches:
              only:
                - production
